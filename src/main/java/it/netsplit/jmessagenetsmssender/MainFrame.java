
package it.netsplit.jmessagenetsmssender;

import au.com.bytecode.opencsv.CSVReader;
import it.netsplit.jmessagenetlib.NoCreditException;
import it.netsplit.jmessagenetlib.SMSAPI;
import it.netsplit.jmessagenetlib.SMSSendInfo;
import it.netsplit.jmessagenetlib.TextLimitExcedeed;
import it.netsplit.jmessagenetlib.UnauthorizedException;
import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.Arrays;
import java.util.prefs.BackingStoreException;
import java.util.prefs.Preferences;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;
import org.json.simple.parser.ParseException;

/**
 *
 * @author enrico
 */
public class MainFrame extends javax.swing.JFrame {
	
	private class SMSTableModel extends DefaultTableModel {

		@Override
		public boolean isCellEditable(int row, int column) {
			return false;
		}
		
	}
	
	private final Preferences prefs;
	private String username;
	private String password;
	private final DefaultListModel JLSnumbersModel = new DefaultListModel();
	private final SMSTableModel JTBsmslistModel = new SMSTableModel();
	private final String messagenetURL;

	/**
	 * Creates new form MainFrame
	 * @param debug
	 */
	public MainFrame(boolean debug) {
		initComponents();
		if(debug) {
			messagenetURL = "http://localhost/~enrico/MessagenetApiTester/backend.php";
		} else {
			messagenetURL = "https://www.messagenet.com/api/";
		}
		
		prefs = Preferences.userNodeForPackage(MainFrame.class);
		this.username = prefs.get("username", null);
		this.password = prefs.get("password", null);
		
		if(this.username == null || this.password == null) {
			_showSettingsFrame();
		}
		
		PlainDocument pd = new PlainDocument() {

			@Override
			public void insertString(int offs, String str, AttributeSet a) throws BadLocationException {
				if(str.length() + getLength() <= 1530) {
					super.insertString(offs, str, a);
				} else if(getLength() < 1530) {
					int max = 1530 - getLength();
					super.insertString(offs, str.substring(0, max), a);
				}
				JLBmsglength.setText(getLength() + "/1530");
			}
		};
		JTAmsg.setDocument(pd);
		JLSnumbers.setModel(JLSnumbersModel);
		
		JTBsmslistModel.addColumn("Stato");
		JTBsmslistModel.addColumn("Destinatario");
		JTBsmslistModel.addColumn("Messaggio");
		
		JTBsmslist.setModel(JTBsmslistModel);
	}

	private void _showSettingsFrame() {
		final SettingsFrame f = new SettingsFrame(this.username, this.password);
		f.setVisible(true);
		f.addComponentListener(new ComponentListener() {

			@Override
			public void componentResized(ComponentEvent e) {
			}

			@Override
			public void componentMoved(ComponentEvent e) {
			}

			@Override
			public void componentShown(ComponentEvent e) {
			}

			@Override
			public void componentHidden(ComponentEvent e) {
				if(!f.isVisible()) {
					f.removeComponentListener(this);
					if(f.username != null) {
						MainFrame.this.username = f.username;
						MainFrame.this.password = f.password;
						prefs.put("username", f.username);
						prefs.put("password", f.password);
						try {
							prefs.flush();
						} catch(BackingStoreException ev) {
							ev.printStackTrace();
						}
					}
				}
			}
		});
	}
	
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTAmsg = new javax.swing.JTextArea();
        JBTsend = new javax.swing.JButton();
        JLBmsglength = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JLSnumbers = new javax.swing.JList();
        JBTdel = new javax.swing.JButton();
        JBTadd = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        JBTOpenFile = new javax.swing.JButton();
        JLBSMSCont = new javax.swing.JLabel();
        JLBDest = new javax.swing.JLabel();
        JLBSMSCost = new javax.swing.JLabel();
        JBTBulkSend = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        JLBFileName = new javax.swing.JLabel();
        JPBBulkSMS = new javax.swing.JProgressBar();
        jScrollPane3 = new javax.swing.JScrollPane();
        JTBsmslist = new javax.swing.JTable();
        JLBcredit = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        JTAmsg.setColumns(20);
        JTAmsg.setLineWrap(true);
        JTAmsg.setRows(5);
        jScrollPane1.setViewportView(JTAmsg);

        JBTsend.setText("Invia");
        JBTsend.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JBTsendMouseClicked(evt);
            }
        });

        JLBmsglength.setText("0/1530");

        jScrollPane2.setViewportView(JLSnumbers);

        JBTdel.setText("Elimina");
        JBTdel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JBTdelMouseClicked(evt);
            }
        });

        JBTadd.setText("Aggiungi");
        JBTadd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JBTaddMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 647, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(JBTadd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JBTdel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(JLBmsglength)
                        .addGap(4, 4, 4)
                        .addComponent(JBTsend)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JBTsend)
                    .addComponent(JBTdel)
                    .addComponent(JBTadd)
                    .addComponent(JLBmsglength))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("SMS semplice", jPanel1);

        JBTOpenFile.setText("Apri");
        JBTOpenFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JBTOpenFileMouseClicked(evt);
            }
        });

        JLBSMSCont.setText("Conteggio SMS:");

        JLBDest.setText("Destinatari differenti:");

        JLBSMSCost.setText("Costo complessivo stimato:");

        JBTBulkSend.setText("Invia");
        JBTBulkSend.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JBTBulkSendMouseClicked(evt);
            }
        });

        jLabel4.setForeground(javax.swing.UIManager.getDefaults().getColor("ComboBox.disabledForeground"));
        jLabel4.setText("Il file CSV deve essere formato da due colonne,");

        jLabel5.setForeground(javax.swing.UIManager.getDefaults().getColor("ComboBox.disabledForeground"));
        jLabel5.setText("nella prima il destinatario e nella seconda il testo");

        JLBFileName.setText("Seleziona un file");

        JTBsmslist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        JTBsmslist.setColumnSelectionAllowed(true);
        JTBsmslist.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(JTBsmslist);
        JTBsmslist.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 647, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(JLBFileName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JBTOpenFile))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(JLBDest)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(JLBSMSCont)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5))
                    .addComponent(JPBBulkSMS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(JLBSMSCost)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(JBTBulkSend)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JBTOpenFile)
                    .addComponent(JLBFileName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(JLBDest))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(JLBSMSCont))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JLBSMSCost)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(JPBBulkSMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JBTBulkSend)
                .addContainerGap())
        );

        jTabbedPane1.addTab("SMS bulk (CSV)", jPanel2);

        JLBcredit.setText("Credito residuo: sconosciuto");

        jMenu1.setText("File");

        jMenuItem1.setText("Impostazioni");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(JLBcredit)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JLBcredit)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JBTaddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBTaddMouseClicked
        String number = JOptionPane.showInputDialog("Inserisci il numero telefonico"
				+ "(compreso di prefisso internazionale, es +39)");
		if(number != null && !number.trim().isEmpty()) {
			JLSnumbersModel.addElement(number);
		}
    }//GEN-LAST:event_JBTaddMouseClicked

    private void JBTdelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBTdelMouseClicked
        int[] idx = JLSnumbers.getSelectedIndices();
		for(int i=idx.length-1; i >= 0; i--) {
			JLSnumbersModel.remove(idx[i]);
		}
    }//GEN-LAST:event_JBTdelMouseClicked

    private void JBTsendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBTsendMouseClicked
        
		if(this.username == null || this.password == null) {
			JOptionPane.showMessageDialog(
					null,
					"Impostare i dati di login prima!",
					"Attenzione",
					JOptionPane.ERROR_MESSAGE
					);
			_showSettingsFrame();
		} else {
			SMSAPI ap = new SMSAPI(messagenetURL, username, password);
			try {
				String[] numbers = Arrays.copyOf(JLSnumbersModel.toArray(), JLSnumbersModel.toArray().length, String[].class);

				SMSSendInfo i = ap.sendSMS(numbers, JTAmsg.getText());
				if(i != null) {
					JLBcredit.setText("Credito residuo: " + i.credit);
					JOptionPane.showMessageDialog(this, "Invio riuscito");
				} else {
					JOptionPane.showMessageDialog(this, ap.getLastError(), "Errore durante l'invio", JOptionPane.ERROR_MESSAGE);
				}
			} catch(NoCreditException e) {
				JOptionPane.showMessageDialog(this, e.getMessage(), "Credito residuo insufficiente", JOptionPane.ERROR_MESSAGE);
			} catch(TextLimitExcedeed e) {
				JOptionPane.showMessageDialog(this, e.getMessage(), "Testo troppo lungo in invio", JOptionPane.ERROR_MESSAGE);
			} catch(UnauthorizedException e) {
				JOptionPane.showMessageDialog(this, e.getMessage(), "Errore autenticazione", JOptionPane.ERROR_MESSAGE);
			} catch(UnsupportedEncodingException | ParseException e) {
				JOptionPane.showMessageDialog(this, e.getMessage(), "Errore librerie parsing", JOptionPane.ERROR_MESSAGE);
			} catch(IOException e) {
				JOptionPane.showMessageDialog(this, e.getMessage(), "Errore durante l'invio", JOptionPane.ERROR_MESSAGE);
			}
		}
    }//GEN-LAST:event_JBTsendMouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        _showSettingsFrame();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void JBTBulkSendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBTBulkSendMouseClicked
        if(this.username == null || this.password == null) {
			JOptionPane.showMessageDialog(
					null,
					"Impostare i dati di login prima!",
					"Attenzione",
					JOptionPane.ERROR_MESSAGE
					);
			_showSettingsFrame();
		} else if(JTBsmslistModel.getRowCount() == 0) {
			JOptionPane.showMessageDialog(
					null,
					"File vuoto o non selezionato!",
					"Attenzione",
					JOptionPane.ERROR_MESSAGE
					);
		} else {
			JBTBulkSend.setEnabled(false);
			
			SwingWorker worker = new SwingWorker<Void, Void>() {

				@Override
				protected Void doInBackground() throws Exception {
					JPBBulkSMS.setMaximum(JTBsmslistModel.getRowCount());
					JPBBulkSMS.setValue(0);

					SMSAPI ap = new SMSAPI(messagenetURL, username, password);

					for(int i=0; i < JTBsmslistModel.getRowCount(); i++) {
						String status = (String)JTBsmslistModel.getValueAt(i, 0);
						if(!status.equals("-") && !status.startsWith("Errore:")) {
							continue;
						}
						String dest = (String)JTBsmslistModel.getValueAt(i, 1);
						String txt = (String)JTBsmslistModel.getValueAt(i, 2);

						String statusMsg;
						try {
							SMSSendInfo inf = ap.sendSMS(new String[] { dest }, txt);
							if(inf != null) {
								JLBcredit.setText("Credito residuo: " + inf.credit);
								// Invio riuscito
								statusMsg = "OK";
							} else {
								statusMsg = "Errore interno";
							}
						} catch(NoCreditException e) {
							statusMsg = "Errore: Credito residuo insufficiente";
						} catch(TextLimitExcedeed e) {
							statusMsg = "Errore: Testo troppo lungo";
						} catch(UnauthorizedException e) {
							statusMsg = "Errore: Errore autenticazione";
						} catch(UnsupportedEncodingException e) {
							statusMsg = "Errore: Errore interno";
						} catch(ParseException | IOException e) {
							statusMsg = "Errore: Errore interno";
						}
						JTBsmslistModel.setValueAt(statusMsg, i, 0);
						JPBBulkSMS.setValue(i+1);
					}
					JBTBulkSend.setEnabled(true);
					return null;
				}
			};
			
			worker.execute();
		}
    }//GEN-LAST:event_JBTBulkSendMouseClicked

    private void JBTOpenFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBTOpenFileMouseClicked
        JFileChooser fc = new JFileChooser();
		fc.setAcceptAllFileFilterUsed(false);
		fc.setApproveButtonText("Apri");
		fc.setDialogTitle("Seleziona il file con gli SMS da inviare");
		fc.setMultiSelectionEnabled(false);
		fc.setFileFilter(new FileNameExtensionFilter("Comma separated values", "csv"));
		int ret = fc.showOpenDialog(this);
		if(ret == JFileChooser.APPROVE_OPTION) {
			this.JLBFileName.setText(fc.getSelectedFile().getAbsolutePath());
			
			int smsNum = 0;
			int sendNum = 0;
			
			try {
				CSVReader reader = new CSVReader(new FileReader(fc.getSelectedFile()), ';');
				String [] nextLine;
				while ((nextLine = reader.readNext()) != null) {
					if(nextLine.length == 2 && !nextLine[0].trim().isEmpty()) {
						JTBsmslistModel.addRow(new String[] { "-", nextLine[0], nextLine[1]});
						float size = nextLine[1].length();
						double smsCount = Math.ceil(size / 160.0);
						smsNum += smsCount;
						sendNum++;
					}
				}
				reader.close();
				
				JLBDest.setText(JLBDest.getText() + sendNum);
				JLBSMSCont.setText(JLBSMSCont.getText() + smsNum);
				JLBSMSCost.setText(JLBSMSCost.getText() + (smsNum*0.0908));
				
			} catch(FileNotFoundException e) {
				JOptionPane.showMessageDialog(this, "File non trovato", "File non trovato", JOptionPane.ERROR_MESSAGE);
			} catch(IOException e) {
				JOptionPane.showMessageDialog(
						this,
						"Errore lettura file", "Errore durante la lettura del file: " + e.getLocalizedMessage(),
						JOptionPane.ERROR_MESSAGE
				);
			}
			
		}
    }//GEN-LAST:event_JBTOpenFileMouseClicked

	/**
	 * @param args the command line arguments
	 */
	public static void main(final String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
//			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//				if ("Nimbus".equals(info.getName())) {
//					javax.swing.UIManager.setLookAndFeel(info.getClassName());
//					break;
//				}
//			}
			javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		
		
		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			@Override
			public void run() {
				boolean debug = false;
				if(args.length > 0 && args[0].equals("-d")) {
					debug = true;
				}
				new MainFrame(debug).setVisible(true);
			}
		});
	}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBTBulkSend;
    private javax.swing.JButton JBTOpenFile;
    private javax.swing.JButton JBTadd;
    private javax.swing.JButton JBTdel;
    private javax.swing.JButton JBTsend;
    private javax.swing.JLabel JLBDest;
    private javax.swing.JLabel JLBFileName;
    private javax.swing.JLabel JLBSMSCont;
    private javax.swing.JLabel JLBSMSCost;
    private javax.swing.JLabel JLBcredit;
    private javax.swing.JLabel JLBmsglength;
    private javax.swing.JList JLSnumbers;
    private javax.swing.JProgressBar JPBBulkSMS;
    private javax.swing.JTextArea JTAmsg;
    private javax.swing.JTable JTBsmslist;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
